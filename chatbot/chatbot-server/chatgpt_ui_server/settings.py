"""
Django settings for chatgpt_ui_server project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from datetime import timedelta

import dj_database_url
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-__9p!i2^udts*l==hl)+6=!fi872f3ec(n%(^f-!6i$o5+7#ar"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

app_domains = os.getenv("APP_DOMAIN", "localhost:9000").split(",")

# Initialize CSRF_TRUSTED_ORIGINS with proper schemes only
CSRF_TRUSTED_ORIGINS = [
    "http://localhost", 
    "http://3dprinter.quest", 
    "https://3dprinter.quest", 
    "http://www.3dprinter.quest", 
    "https://www.3dprinter.quest", 
    "http://112.213.35.147", 
    "https://112.213.35.147"
]
for app_domain in app_domains:
    CSRF_TRUSTED_ORIGINS.append(f"http://{app_domain}")
    CSRF_TRUSTED_ORIGINS.append(f"https://{app_domain}")

# Application definition

INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "rest_framework",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "dj_rest_auth",
    "dj_rest_auth.registration",
    "django_apscheduler",
    "chat.apps.ChatConfig",
    "stats.apps.StatsConfig",
    "provider.apps.ProviderConfig",
    "monitor.apps.MonitorConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "chatgpt_ui_server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "chatgpt_ui_server.wsgi.application"

db_config = dj_database_url.config("DB_URL", "sqlite:///db.sqlite3")
if db_config.get("ENGINE") == "django.db.backends.mysql":
    db_config["OPTIONS"] = {"charset": "utf8mb4"}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {"default": db_config}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Australia/Sydney'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# STATIC_ROOT = '/var/www/chatbot-static'
STATIC_ROOT = '/root/Chatbotv2.0/chatbot-server/static'
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_AUTHENTICATION_CLASSES": [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        # 'rest_framework_simplejwt.authentication.JWTAuthentication'
        "dj_rest_auth.jwt_auth.JWTCookieAuthentication"
    ]
}

SITE_ID = 1

TWILIO_ACCOUNT_SID = 'AC02ad82b48fec1f7ad26c2cc24dcd2e86'
TWILIO_AUTH_TOKEN = '9ed2ab3de2ac7b0654be74f77c636255'
SENDGRID_API_KEY = '28e71e7adfaae283618d6b0c3dcf44b5-us21'
POSTMARK_SERVER_TOKEN = '6ebeb8f5-88f5-4fbf-95e7-84e39e313079'


REST_AUTH = {
    "USE_JWT": True,
    "TOKEN_MODEL": None,
    "SESSION_LOGIN": False,
    "JWT_AUTH_COOKIE": "auth",
    "JWT_AUTH_HTTPONLY": True,
    "USER_DETAILS_SERIALIZER": "account.serializers.UserDetailsSerializer",
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.privateemail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'office@3dprinter.quest'
EMAIL_HOST_PASSWORD = 'PASSWORD'
DEFAULT_FROM_EMAIL = 'office@3dprinter.quest'



# Chroma Sqlite
chroma_db_config = dj_database_url.config("DATA_PATH", "sqlite:///chroma.sqlite3")
if chroma_db_config.get("ENGINE") == "django.db.backends.mysql":
    chroma_db_config["OPTIONS"] = {"charset": "utf8mb4"}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES["data"] = chroma_db_config
